#These are the steps and files I used to deploy k8s 1.23 in the video. Please modify k8s/calico.yaml and k8s/metallb-deploy.yaml to match your pod-network-cidr

#Install crio v1.22
OS=xUbuntu_20.04
CRIO_VERSION=1.22
echo "deb https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/$OS/ /"|sudo tee /etc/apt/sources.list.d/devel:kubic:libcontainers:stable.list
echo "deb http://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable:/cri-o:/$CRIO_VERSION/$OS/ /"|sudo tee /etc/apt/sources.list.d/devel:kubic:libcontainers:stable:cri-o:$CRIO_VERSION.list
curl -L https://download.opensuse.org/repositories/devel:kubic:libcontainers:stable:cri-o:$CRIO_VERSION/$OS/Release.key | sudo apt-key add -
curl -L https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/$OS/Release.key | sudo apt-key add -
apt update
apt install cri-o cri-o-runc cri-tools -y
systemctl enable --now crio.service

#Install Kubelet, Kubeadm, and Kubectl
curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg
echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
sudo apt-get update
apt-get install -y kubelet kubeadm kubectl

#Disabling Swap for Kubernetes Install
sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab
swapoff -a

modprobe br_netfilter

cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
br_netfilter
EOF

#sysctl settings required for Kubernetes Install"

tee /etc/sysctl.d/kubernetes.conf<<EOF
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
net.ipv4.ip_forward = 1
EOF

#Reload sysctl
sysctl --system > /dev/null 2>&1

#Install Kubernetes
#Default pod network is 192.168.0.0/16 - Change if it conflicts like I did
kubeadm init

#Creating .kube folder, copy kubeconfig, and add var to .bash_profile
mkdir -p $HOME/.kube
cp -i /etc/kubernetes/admin.conf $HOME/.kube/conf
echo "export KUBECONFIG=$HOME/.kube/conf" >> $HOME/.bashrc
source $HOME/.bashrc

#Install Container Network Interface (CNI) - Calico
kubectl apply -f k8s/calico.yaml
kubectl wait --for=condition=ready pod -l k8s-app=calico-node -n kube-system

#Remove Master taint from all nodes
kubectl taint nodes --all node-role.kubernetes.io/master-

#Install MetalLB - Load Balancer for Bare Metal installs
#Modify line 20 of metallb-deploy.yaml to match the local IP of your server
#Example: 20: 192.168.50.88-192.168.50.88
kubectl apply -f k8s/metallb-deploy.yaml
kubectl wait --for=condition=ready pod -l app=metallb -n metallb-system

#Deploy Ingress-nginx
kubectl apply -f k8s/ingress-nginx-deploy.yaml

#Deploy hello-openshift to test
#You will need DNS setup for this to work
kubectl apply -f k8s/hello-openshift.yaml
